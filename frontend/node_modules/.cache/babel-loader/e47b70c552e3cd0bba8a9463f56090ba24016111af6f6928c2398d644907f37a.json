{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gemastik\\\\yoloapp\\\\yoloapp\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on first render\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function - connects to backend API for authentication\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const user = {\n          id: response.data.user.id,\n          username: response.data.user.username,\n          email: response.data.user.email\n        };\n        setCurrentUser(user);\n        localStorage.setItem('user', JSON.stringify(user));\n        return user;\n      } else {\n        throw new Error(response.data.message || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed');\n    }\n  };\n\n  // Register function - connects to backend API for user registration\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: 'Registration successful'\n        };\n      } else {\n        throw new Error(response.data.message || 'Registration failed');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Registration failed');\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","response","post","data","success","id","username","setItem","stringify","Error","message","error","_error$response","_error$response$data","console","register","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Gemastik/yoloapp/yoloapp/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is logged in on first render\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      setCurrentUser(JSON.parse(user));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function - connects to backend API for authentication\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { \r\n        email, \r\n        password \r\n      });\r\n      \r\n      if (response.data.success) {\r\n        const user = {\r\n          id: response.data.user.id,\r\n          username: response.data.user.username,\r\n          email: response.data.user.email\r\n        };\r\n        \r\n        setCurrentUser(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return user;\r\n      } else {\r\n        throw new Error(response.data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw new Error(error.response?.data?.message || error.message || 'Login failed');\r\n    }\r\n  };\r\n\r\n  // Register function - connects to backend API for user registration\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', { \r\n        username, \r\n        email, \r\n        password \r\n      });\r\n      \r\n      if (response.data.success) {\r\n        return { success: true, message: 'Registration successful' };\r\n      } else {\r\n        throw new Error(response.data.message || 'Registration failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      throw new Error(error.response?.data?.message || error.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}