{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gemastik\\\\yoloapp\\\\yoloapp\\\\frontend\\\\src\\\\pages\\\\PredictGesture.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictGesture = ({\n  onNavigate\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const overlayCanvasRef = useRef(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\n  const [fps, setFps] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const predictionIntervalRef = useRef(null);\n  const frameCountRef = useRef(0);\n  const startTimeRef = useRef(0);\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      setIsLoading(true);\n      setStatusMessage(\"Initializing camera...\");\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          }\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          if (videoRef.current.readyState >= 3) {\n            resolve();\n          } else {\n            videoRef.current.onloadedmetadata = resolve;\n          }\n        });\n        setIsCameraOn(true);\n        setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\n\n        // Setup overlay canvas\n        if (overlayCanvasRef.current) {\n          overlayCanvasRef.current.width = videoRef.current.videoWidth;\n          overlayCanvasRef.current.height = videoRef.current.videoHeight;\n        }\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = useCallback(() => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setIsCameraOn(false);\n    setIsPredicting(false);\n    setStatusMessage(\"Click 'Start Camera' to begin.\");\n\n    // Clear overlay canvas\n    if (overlayCanvasRef.current) {\n      const ctx = overlayCanvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n    }\n\n    // Clear prediction interval\n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n  }, []);\n\n  // Function to start prediction\n  const startPrediction = () => {\n    if (!isCameraOn) return;\n    setIsPredicting(true);\n    setStatusMessage(\"Predicting gestures in real-time...\");\n  };\n\n  // Function to stop prediction\n  const stopPrediction = useCallback(() => {\n    setIsPredicting(false);\n    setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\n\n    // Clear overlay canvas\n    if (overlayCanvasRef.current) {\n      const ctx = overlayCanvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n    }\n\n    // Clear prediction interval\n    if (predictionIntervalRef.current) {\n      clearInterval(predictionIntervalRef.current);\n      predictionIntervalRef.current = null;\n    }\n\n    // Reset FPS counter\n    setFps(0);\n    frameCountRef.current = 0;\n    startTimeRef.current = 0;\n  }, []);\n\n  // Function to draw bounding boxes on overlay canvas\n  const drawBoundingBoxes = useCallback(detections => {\n    if (!overlayCanvasRef.current || !detections || detections.length === 0) return;\n    const ctx = overlayCanvasRef.current.getContext('2d');\n    const canvas = overlayCanvasRef.current;\n\n    // Clear previous drawings\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    detections.forEach(detection => {\n      const {\n        bbox,\n        class: className,\n        confidence\n      } = detection;\n      if (!bbox || bbox.length < 4) return;\n      const [x1, y1, x2, y2] = bbox;\n      const width = x2 - x1;\n      const height = y2 - y1;\n\n      // Draw bounding box\n      ctx.strokeStyle = '#00ff00';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x1, y1, width, height);\n\n      // Draw background for label\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const text = `${className} (${(confidence * 100).toFixed(1)}%)`;\n      const textWidth = ctx.measureText(text).width;\n      ctx.fillRect(x1, y1 - 20, textWidth + 10, 20);\n\n      // Draw label\n      ctx.fillStyle = '#00ff00';\n      ctx.font = '14px Arial';\n      ctx.fillText(text, x1 + 5, y1 - 5);\n    });\n  }, []);\n\n  // Function to capture frame and send to backend for prediction\n  const captureAndPredict = useCallback(async () => {\n    if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    // Check if video is ready\n    if (video.videoWidth === 0 || video.videoHeight === 0) return;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    try {\n      const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\n      const formData = new FormData();\n      formData.append('file', blob, 'frame.jpg');\n      const response = await fetch('http://localhost:8001/api/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPredictionResult(data);\n\n        // Draw bounding boxes jika ada detections\n        if (data.detections && data.detections.length > 0) {\n          drawBoundingBoxes(data.detections);\n        } else {\n          // Clear overlay jika tidak ada detections\n          if (overlayCanvasRef.current) {\n            const ctx = overlayCanvasRef.current.getContext('2d');\n            ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n    }\n  }, [isPredicting, drawBoundingBoxes]);\n\n  // FPS counter and prediction loop\n  useEffect(() => {\n    if (isPredicting) {\n      startTimeRef.current = Date.now();\n      predictionIntervalRef.current = setInterval(() => {\n        captureAndPredict();\n        frameCountRef.current++;\n\n        // Calculate FPS every second\n        const currentTime = Date.now();\n        const elapsedTime = (currentTime - startTimeRef.current) / 1000;\n        if (elapsedTime >= 1) {\n          setFps(Math.round(frameCountRef.current / elapsedTime));\n          frameCountRef.current = 0;\n          startTimeRef.current = currentTime;\n        }\n      }, 100); // Adjust interval for desired prediction rate\n    }\n    return () => {\n      if (predictionIntervalRef.current) {\n        clearInterval(predictionIntervalRef.current);\n        predictionIntervalRef.current = null;\n      }\n    };\n  }, [isPredicting, captureAndPredict]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, [stopCamera]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-6xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-center sm:text-left\",\n        children: \"Gesture Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate('home'),\n        className: \"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors w-full sm:w-auto\",\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: overlayCanvasRef,\n            className: \"absolute top-0 left-0 w-full h-full pointer-events-none\",\n            style: {\n              zIndex: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-white\",\n              children: \"Loading camera...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-2 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isCameraOn ? stopCamera : startCamera,\n            disabled: isLoading,\n            className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed flex-1 sm:flex-none\",\n            children: isLoading ? 'Initializing...' : isCameraOn ? 'Stop Camera' : 'Start Camera'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isPredicting ? stopPrediction : startPrediction,\n            disabled: !isCameraOn || isLoading,\n            className: \"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed flex-1 sm:flex-none\",\n            children: isPredicting ? 'Stop Prediction' : 'Start Prediction'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Prediction Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message bg-gray-700 p-3 rounded-lg mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-900 p-2 rounded-lg text-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono\",\n            children: [\"FPS: \", fps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-results space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Detected Gesture:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl text-green-400 font-bold text-center\",\n              children: predictionResult.detected_class || 'No gesture detected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Confidence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: predictionResult.confidence ? `${(predictionResult.confidence * 100).toFixed(2)}%` : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), predictionResult.detections && predictionResult.detections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"All Detections:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 max-h-40 overflow-y-auto\",\n              children: predictionResult.detections.map((detection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: detection.class\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [(detection.confidence * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictGesture, \"/HDz/F1swyCDFOKiH/hW3B4GPJQ=\");\n_c = PredictGesture;\nexport default PredictGesture;\nvar _c;\n$RefreshReg$(_c, \"PredictGesture\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","PredictGesture","onNavigate","_s","videoRef","canvasRef","overlayCanvasRef","isCameraOn","setIsCameraOn","isPredicting","setIsPredicting","predictionResult","setPredictionResult","statusMessage","setStatusMessage","fps","setFps","isLoading","setIsLoading","predictionIntervalRef","frameCountRef","startTimeRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","current","srcObject","Promise","resolve","readyState","onloadedmetadata","videoWidth","videoHeight","err","console","error","stopCamera","tracks","getTracks","forEach","track","stop","ctx","getContext","clearRect","clearInterval","startPrediction","stopPrediction","drawBoundingBoxes","detections","length","canvas","detection","bbox","class","className","confidence","x1","y1","x2","y2","strokeStyle","lineWidth","strokeRect","fillStyle","text","toFixed","textWidth","measureText","fillRect","font","fillText","captureAndPredict","context","drawImage","blob","toBlob","formData","FormData","append","response","fetch","method","body","ok","data","json","Date","now","setInterval","currentTime","elapsedTime","Math","round","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","style","zIndex","disabled","detected_class","map","index","_c","$RefreshReg$"],"sources":["C:/Gemastik/yoloapp/yoloapp/frontend/src/pages/PredictGesture.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nconst PredictGesture = ({ onNavigate }) => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const overlayCanvasRef = useRef(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isPredicting, setIsPredicting] = useState(false);\r\n    const [predictionResult, setPredictionResult] = useState(null);\r\n    const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\r\n    const [fps, setFps] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const predictionIntervalRef = useRef(null);\r\n    const frameCountRef = useRef(0);\r\n    const startTimeRef = useRef(0);\r\n\r\n    // Function to start the camera\r\n    const startCamera = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            setStatusMessage(\"Initializing camera...\");\r\n            \r\n            const stream = await navigator.mediaDevices.getUserMedia({ \r\n                video: { \r\n                    width: { ideal: 640 },\r\n                    height: { ideal: 480 }\r\n                } \r\n            });\r\n            \r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n                \r\n                // Wait for video to be ready\r\n                await new Promise((resolve) => {\r\n                    if (videoRef.current.readyState >= 3) {\r\n                        resolve();\r\n                    } else {\r\n                        videoRef.current.onloadedmetadata = resolve;\r\n                    }\r\n                });\r\n                \r\n                setIsCameraOn(true);\r\n                setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\r\n                \r\n                // Setup overlay canvas\r\n                if (overlayCanvasRef.current) {\r\n                    overlayCanvasRef.current.width = videoRef.current.videoWidth;\r\n                    overlayCanvasRef.current.height = videoRef.current.videoHeight;\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Function to stop the camera\r\n    const stopCamera = useCallback(() => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            const tracks = videoRef.current.srcObject.getTracks();\r\n            tracks.forEach(track => track.stop());\r\n            videoRef.current.srcObject = null;\r\n        }\r\n        \r\n        setIsCameraOn(false);\r\n        setIsPredicting(false);\r\n        setStatusMessage(\"Click 'Start Camera' to begin.\");\r\n        \r\n        // Clear overlay canvas\r\n        if (overlayCanvasRef.current) {\r\n            const ctx = overlayCanvasRef.current.getContext('2d');\r\n            ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n        }\r\n        \r\n        // Clear prediction interval\r\n        if (predictionIntervalRef.current) {\r\n            clearInterval(predictionIntervalRef.current);\r\n            predictionIntervalRef.current = null;\r\n        }\r\n    }, []);\r\n\r\n    // Function to start prediction\r\n    const startPrediction = () => {\r\n        if (!isCameraOn) return;\r\n        setIsPredicting(true);\r\n        setStatusMessage(\"Predicting gestures in real-time...\");\r\n    };\r\n\r\n    // Function to stop prediction\r\n    const stopPrediction = useCallback(() => {\r\n        setIsPredicting(false);\r\n        setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\r\n        \r\n        // Clear overlay canvas\r\n        if (overlayCanvasRef.current) {\r\n            const ctx = overlayCanvasRef.current.getContext('2d');\r\n            ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n        }\r\n        \r\n        // Clear prediction interval\r\n        if (predictionIntervalRef.current) {\r\n            clearInterval(predictionIntervalRef.current);\r\n            predictionIntervalRef.current = null;\r\n        }\r\n        \r\n        // Reset FPS counter\r\n        setFps(0);\r\n        frameCountRef.current = 0;\r\n        startTimeRef.current = 0;\r\n    }, []);\r\n\r\n    // Function to draw bounding boxes on overlay canvas\r\n    const drawBoundingBoxes = useCallback((detections) => {\r\n        if (!overlayCanvasRef.current || !detections || detections.length === 0) return;\r\n        \r\n        const ctx = overlayCanvasRef.current.getContext('2d');\r\n        const canvas = overlayCanvasRef.current;\r\n        \r\n        // Clear previous drawings\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        detections.forEach(detection => {\r\n            const { bbox, class: className, confidence } = detection;\r\n            if (!bbox || bbox.length < 4) return;\r\n            \r\n            const [x1, y1, x2, y2] = bbox;\r\n            const width = x2 - x1;\r\n            const height = y2 - y1;\r\n            \r\n            // Draw bounding box\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(x1, y1, width, height);\r\n            \r\n            // Draw background for label\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n            const text = `${className} (${(confidence * 100).toFixed(1)}%)`;\r\n            const textWidth = ctx.measureText(text).width;\r\n            ctx.fillRect(x1, y1 - 20, textWidth + 10, 20);\r\n            \r\n            // Draw label\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.font = '14px Arial';\r\n            ctx.fillText(text, x1 + 5, y1 - 5);\r\n        });\r\n    }, []);\r\n\r\n    // Function to capture frame and send to backend for prediction\r\n    const captureAndPredict = useCallback(async () => {\r\n        if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\r\n        \r\n        const canvas = canvasRef.current;\r\n        const video = videoRef.current;\r\n        \r\n        // Check if video is ready\r\n        if (video.videoWidth === 0 || video.videoHeight === 0) return;\r\n        \r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        \r\n        try {\r\n            const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'frame.jpg');\r\n\r\n            const response = await fetch('http://localhost:8001/api/predict', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPredictionResult(data);\r\n                \r\n                // Draw bounding boxes jika ada detections\r\n                if (data.detections && data.detections.length > 0) {\r\n                    drawBoundingBoxes(data.detections);\r\n                } else {\r\n                    // Clear overlay jika tidak ada detections\r\n                    if (overlayCanvasRef.current) {\r\n                        const ctx = overlayCanvasRef.current.getContext('2d');\r\n                        ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Prediction failed:\", error);\r\n        }\r\n    }, [isPredicting, drawBoundingBoxes]);\r\n\r\n    // FPS counter and prediction loop\r\n    useEffect(() => {\r\n        if (isPredicting) {\r\n            startTimeRef.current = Date.now();\r\n            \r\n            predictionIntervalRef.current = setInterval(() => {\r\n                captureAndPredict();\r\n                frameCountRef.current++;\r\n                \r\n                // Calculate FPS every second\r\n                const currentTime = Date.now();\r\n                const elapsedTime = (currentTime - startTimeRef.current) / 1000;\r\n                \r\n                if (elapsedTime >= 1) {\r\n                    setFps(Math.round(frameCountRef.current / elapsedTime));\r\n                    frameCountRef.current = 0;\r\n                    startTimeRef.current = currentTime;\r\n                }\r\n            }, 100); // Adjust interval for desired prediction rate\r\n        }\r\n\r\n        return () => {\r\n            if (predictionIntervalRef.current) {\r\n                clearInterval(predictionIntervalRef.current);\r\n                predictionIntervalRef.current = null;\r\n            }\r\n        };\r\n    }, [isPredicting, captureAndPredict]);\r\n\r\n    // Cleanup on component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            stopCamera();\r\n        };\r\n    }, [stopCamera]);\r\n\r\n    return (\r\n        <div className=\"w-full max-w-6xl mx-auto p-4\">\r\n            {/* Header */}\r\n            <div className=\"w-full flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\r\n                <h1 className=\"text-2xl font-bold text-center sm:text-left\">Gesture Prediction</h1>\r\n                <button \r\n                    onClick={() => onNavigate('home')} \r\n                    className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors w-full sm:w-auto\"\r\n                >\r\n                    &larr; Back to Home\r\n                </button>\r\n            </div>\r\n            \r\n            {/* Camera and Prediction Section */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Left Panel: Camera Feed */}\r\n                <div className=\"bg-gray-800 p-4 rounded-2xl shadow-lg\">\r\n                    <div className=\"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4 relative\">\r\n                        <video \r\n                            ref={videoRef} \r\n                            autoPlay \r\n                            playsInline \r\n                            muted\r\n                            className=\"w-full h-full object-cover\"\r\n                        ></video>\r\n                        {/* Overlay canvas untuk bounding boxes */}\r\n                        <canvas \r\n                            ref={overlayCanvasRef}\r\n                            className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\r\n                            style={{ zIndex: 10 }}\r\n                        ></canvas>\r\n                        <canvas ref={canvasRef} className=\"hidden\"></canvas>\r\n                        \r\n                        {/* Loading overlay */}\r\n                        {isLoading && (\r\n                            <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                                <div className=\"text-white\">Loading camera...</div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex flex-col sm:flex-row gap-2 justify-center\">\r\n                        <button \r\n                            onClick={isCameraOn ? stopCamera : startCamera} \r\n                            disabled={isLoading}\r\n                            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed flex-1 sm:flex-none\"\r\n                        >\r\n                            {isLoading ? 'Initializing...' : (isCameraOn ? 'Stop Camera' : 'Start Camera')}\r\n                        </button>\r\n                        \r\n                        <button \r\n                            onClick={isPredicting ? stopPrediction : startPrediction} \r\n                            disabled={!isCameraOn || isLoading}\r\n                            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500 disabled:cursor-not-allowed flex-1 sm:flex-none\"\r\n                        >\r\n                            {isPredicting ? 'Stop Prediction' : 'Start Prediction'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Right Panel: Prediction Results */}\r\n                <div className=\"bg-gray-800 p-6 rounded-2xl shadow-lg\">\r\n                    <h2 className=\"text-xl font-bold mb-4 text-center\">Prediction Results</h2>\r\n                    \r\n                    <div className=\"status-message bg-gray-700 p-3 rounded-lg mb-4\">\r\n                        <p className=\"text-center\">{statusMessage}</p>\r\n                    </div>\r\n                    \r\n                    {isPredicting && (\r\n                        <div className=\"bg-blue-900 p-2 rounded-lg text-center mb-4\">\r\n                            <p className=\"font-mono\">FPS: {fps}</p>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {predictionResult && (\r\n                        <div className=\"prediction-results space-y-4\">\r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Detected Gesture:</h3>\r\n                                <p className=\"text-xl text-green-400 font-bold text-center\">\r\n                                    {predictionResult.detected_class || 'No gesture detected'}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Confidence:</h3>\r\n                                <p className=\"text-center\">\r\n                                    {predictionResult.confidence \r\n                                        ? `${(predictionResult.confidence * 100).toFixed(2)}%` \r\n                                        : 'N/A'\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            {predictionResult.detections && predictionResult.detections.length > 0 && (\r\n                                <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                    <h3 className=\"font-bold mb-2\">All Detections:</h3>\r\n                                    <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n                                        {predictionResult.detections.map((detection, index) => (\r\n                                            <div key={index} className=\"flex justify-between\">\r\n                                                <span>{detection.class}</span>\r\n                                                <span>{(detection.confidence * 100).toFixed(1)}%</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PredictGesture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}