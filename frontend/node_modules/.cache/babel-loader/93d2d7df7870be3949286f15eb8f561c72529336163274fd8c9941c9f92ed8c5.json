{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gemastik\\\\yoloapp\\\\yoloapp\\\\frontend\\\\src\\\\pages\\\\PredictGesture.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictGesture = ({\n  onNavigate\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const overlayCanvasRef = useRef(null); // Canvas untuk menampilkan bounding box\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\n  const [fps, setFps] = useState(0);\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          }\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraOn(true);\n        setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\n\n        // Setup overlay canvas setelah video siap\n        videoRef.current.onloadedmetadata = () => {\n          if (overlayCanvasRef.current) {\n            overlayCanvasRef.current.width = videoRef.current.videoWidth;\n            overlayCanvasRef.current.height = videoRef.current.videoHeight;\n          }\n        };\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      setIsCameraOn(false);\n      setIsPredicting(false);\n      setStatusMessage(\"Click 'Start Camera' to begin.\");\n\n      // Clear overlay canvas\n      if (overlayCanvasRef.current) {\n        const ctx = overlayCanvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n      }\n    }\n  };\n\n  // Function to start prediction\n  const startPrediction = () => {\n    if (!isCameraOn) return;\n    setIsPredicting(true);\n    setStatusMessage(\"Predicting gestures in real-time...\");\n  };\n\n  // Function to stop prediction\n  const stopPrediction = () => {\n    setIsPredicting(false);\n    setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\n\n    // Clear overlay canvas ketika prediction dihentikan\n    if (overlayCanvasRef.current) {\n      const ctx = overlayCanvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n    }\n  };\n\n  // Function to draw bounding boxes on overlay canvas\n  const drawBoundingBoxes = detections => {\n    if (!overlayCanvasRef.current || !detections || detections.length === 0) return;\n    const ctx = overlayCanvasRef.current.getContext('2d');\n    const canvas = overlayCanvasRef.current;\n\n    // Clear previous drawings\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    detections.forEach(detection => {\n      const {\n        bbox,\n        class: className,\n        confidence\n      } = detection;\n      if (!bbox || bbox.length < 4) return;\n      const [x1, y1, x2, y2] = bbox;\n      const width = x2 - x1;\n      const height = y2 - y1;\n\n      // Draw bounding box\n      ctx.strokeStyle = '#00ff00';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x1, y1, width, height);\n\n      // Draw background for label\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      const text = `${className} (${(confidence * 100).toFixed(1)}%)`;\n      const textWidth = ctx.measureText(text).width;\n      ctx.fillRect(x1, y1 - 20, textWidth + 10, 20);\n\n      // Draw label\n      ctx.fillStyle = '#00ff00';\n      ctx.font = '14px Arial';\n      ctx.fillText(text, x1 + 5, y1 - 5);\n    });\n  };\n\n  // Function to capture frame and send to backend for prediction\n  const captureAndPredict = async () => {\n    if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    try {\n      const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\n      const formData = new FormData();\n      formData.append('file', blob, 'frame.jpg');\n      const response = await fetch('http://localhost:8001/api/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPredictionResult(data);\n\n        // Draw bounding boxes jika ada detections\n        if (data.detections && data.detections.length > 0) {\n          drawBoundingBoxes(data.detections);\n        } else {\n          // Clear overlay jika tidak ada detections\n          if (overlayCanvasRef.current) {\n            const ctx = overlayCanvasRef.current.getContext('2d');\n            ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n    }\n  };\n\n  // FPS counter and prediction loop\n  useEffect(() => {\n    let frameCount = 0;\n    let startTime = Date.now();\n    let predictionInterval = null;\n    if (isPredicting) {\n      predictionInterval = setInterval(() => {\n        captureAndPredict();\n        frameCount++;\n\n        // Calculate FPS every second\n        const currentTime = Date.now();\n        const elapsedTime = (currentTime - startTime) / 1000;\n        if (elapsedTime >= 1) {\n          setFps(Math.round(frameCount / elapsedTime));\n          frameCount = 0;\n          startTime = currentTime;\n        }\n      }, 100); // Adjust interval for desired prediction rate\n    } else {\n      // Clear overlay canvas ketika prediction dihentikan\n      if (overlayCanvasRef.current) {\n        const ctx = overlayCanvasRef.current.getContext('2d');\n        ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\n      }\n    }\n    return () => {\n      if (predictionInterval) {\n        clearInterval(predictionInterval);\n      }\n    };\n  }, [isPredicting]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Gesture Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate('home'),\n        className: \"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors\",\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: overlayCanvasRef,\n            className: \"absolute top-0 left-0 w-full h-full pointer-events-none\",\n            style: {\n              zIndex: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isCameraOn ? stopCamera : startCamera,\n            className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors\",\n            children: isCameraOn ? 'Stop Camera' : 'Start Camera'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isPredicting ? stopPrediction : startPrediction,\n            disabled: !isCameraOn,\n            className: \"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500\",\n            children: isPredicting ? 'Stop Prediction' : 'Start Prediction'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Prediction Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message bg-gray-700 p-3 rounded-lg mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-900 p-2 rounded-lg text-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono\",\n            children: [\"FPS: \", fps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-results space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Detected Gesture:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl text-green-400 font-bold text-center\",\n              children: predictionResult.detected_class || 'No gesture detected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Confidence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: predictionResult.confidence ? `${(predictionResult.confidence * 100).toFixed(2)}%` : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), predictionResult.detections && predictionResult.detections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"All Detections:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: predictionResult.detections.map((detection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: detection.class\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [(detection.confidence * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictGesture, \"DOC68l+QC7NW0ahKa3G+YgIiasA=\");\n_c = PredictGesture;\nexport default PredictGesture;\nvar _c;\n$RefreshReg$(_c, \"PredictGesture\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PredictGesture","onNavigate","_s","videoRef","canvasRef","overlayCanvasRef","isCameraOn","setIsCameraOn","isPredicting","setIsPredicting","predictionResult","setPredictionResult","statusMessage","setStatusMessage","fps","setFps","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","current","srcObject","onloadedmetadata","videoWidth","videoHeight","err","console","error","stopCamera","getTracks","forEach","track","stop","ctx","getContext","clearRect","startPrediction","stopPrediction","drawBoundingBoxes","detections","length","canvas","detection","bbox","class","className","confidence","x1","y1","x2","y2","strokeStyle","lineWidth","strokeRect","fillStyle","text","toFixed","textWidth","measureText","fillRect","font","fillText","captureAndPredict","context","drawImage","blob","Promise","resolve","toBlob","formData","FormData","append","response","fetch","method","body","ok","data","json","frameCount","startTime","Date","now","predictionInterval","setInterval","currentTime","elapsedTime","Math","round","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","style","zIndex","disabled","detected_class","map","index","_c","$RefreshReg$"],"sources":["C:/Gemastik/yoloapp/yoloapp/frontend/src/pages/PredictGesture.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst PredictGesture = ({ onNavigate }) => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const overlayCanvasRef = useRef(null); // Canvas untuk menampilkan bounding box\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isPredicting, setIsPredicting] = useState(false);\r\n    const [predictionResult, setPredictionResult] = useState(null);\r\n    const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\r\n    const [fps, setFps] = useState(0);\r\n\r\n    // Function to start the camera\r\n    const startCamera = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ \r\n                video: { \r\n                    width: { ideal: 640 },\r\n                    height: { ideal: 480 }\r\n                } \r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n                setIsCameraOn(true);\r\n                setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\r\n                \r\n                // Setup overlay canvas setelah video siap\r\n                videoRef.current.onloadedmetadata = () => {\r\n                    if (overlayCanvasRef.current) {\r\n                        overlayCanvasRef.current.width = videoRef.current.videoWidth;\r\n                        overlayCanvasRef.current.height = videoRef.current.videoHeight;\r\n                    }\r\n                };\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\r\n        }\r\n    };\r\n\r\n    // Function to stop the camera\r\n    const stopCamera = () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            setIsCameraOn(false);\r\n            setIsPredicting(false);\r\n            setStatusMessage(\"Click 'Start Camera' to begin.\");\r\n            \r\n            // Clear overlay canvas\r\n            if (overlayCanvasRef.current) {\r\n                const ctx = overlayCanvasRef.current.getContext('2d');\r\n                ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Function to start prediction\r\n    const startPrediction = () => {\r\n        if (!isCameraOn) return;\r\n        setIsPredicting(true);\r\n        setStatusMessage(\"Predicting gestures in real-time...\");\r\n    };\r\n\r\n    // Function to stop prediction\r\n    const stopPrediction = () => {\r\n        setIsPredicting(false);\r\n        setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\r\n        \r\n        // Clear overlay canvas ketika prediction dihentikan\r\n        if (overlayCanvasRef.current) {\r\n            const ctx = overlayCanvasRef.current.getContext('2d');\r\n            ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n        }\r\n    };\r\n\r\n    // Function to draw bounding boxes on overlay canvas\r\n    const drawBoundingBoxes = (detections) => {\r\n        if (!overlayCanvasRef.current || !detections || detections.length === 0) return;\r\n        \r\n        const ctx = overlayCanvasRef.current.getContext('2d');\r\n        const canvas = overlayCanvasRef.current;\r\n        \r\n        // Clear previous drawings\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        detections.forEach(detection => {\r\n            const { bbox, class: className, confidence } = detection;\r\n            if (!bbox || bbox.length < 4) return;\r\n            \r\n            const [x1, y1, x2, y2] = bbox;\r\n            const width = x2 - x1;\r\n            const height = y2 - y1;\r\n            \r\n            // Draw bounding box\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(x1, y1, width, height);\r\n            \r\n            // Draw background for label\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n            const text = `${className} (${(confidence * 100).toFixed(1)}%)`;\r\n            const textWidth = ctx.measureText(text).width;\r\n            ctx.fillRect(x1, y1 - 20, textWidth + 10, 20);\r\n            \r\n            // Draw label\r\n            ctx.fillStyle = '#00ff00';\r\n            ctx.font = '14px Arial';\r\n            ctx.fillText(text, x1 + 5, y1 - 5);\r\n        });\r\n    };\r\n\r\n    // Function to capture frame and send to backend for prediction\r\n    const captureAndPredict = async () => {\r\n        if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\r\n        \r\n        const canvas = canvasRef.current;\r\n        const video = videoRef.current;\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        \r\n        try {\r\n            const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'frame.jpg');\r\n\r\n            const response = await fetch('http://localhost:8001/api/predict', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPredictionResult(data);\r\n                \r\n                // Draw bounding boxes jika ada detections\r\n                if (data.detections && data.detections.length > 0) {\r\n                    drawBoundingBoxes(data.detections);\r\n                } else {\r\n                    // Clear overlay jika tidak ada detections\r\n                    if (overlayCanvasRef.current) {\r\n                        const ctx = overlayCanvasRef.current.getContext('2d');\r\n                        ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Prediction failed:\", error);\r\n        }\r\n    };\r\n\r\n    // FPS counter and prediction loop\r\n    useEffect(() => {\r\n        let frameCount = 0;\r\n        let startTime = Date.now();\r\n        let predictionInterval = null;\r\n\r\n        if (isPredicting) {\r\n            predictionInterval = setInterval(() => {\r\n                captureAndPredict();\r\n                frameCount++;\r\n                \r\n                // Calculate FPS every second\r\n                const currentTime = Date.now();\r\n                const elapsedTime = (currentTime - startTime) / 1000;\r\n                \r\n                if (elapsedTime >= 1) {\r\n                    setFps(Math.round(frameCount / elapsedTime));\r\n                    frameCount = 0;\r\n                    startTime = currentTime;\r\n                }\r\n            }, 100); // Adjust interval for desired prediction rate\r\n        } else {\r\n            // Clear overlay canvas ketika prediction dihentikan\r\n            if (overlayCanvasRef.current) {\r\n                const ctx = overlayCanvasRef.current.getContext('2d');\r\n                ctx.clearRect(0, 0, overlayCanvasRef.current.width, overlayCanvasRef.current.height);\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            if (predictionInterval) {\r\n                clearInterval(predictionInterval);\r\n            }\r\n        };\r\n    }, [isPredicting]);\r\n\r\n    // Cleanup on component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (videoRef.current && videoRef.current.srcObject) {\r\n                videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"w-full max-w-4xl mx-auto p-4\">\r\n            {/* Header */}\r\n            <div className=\"w-full flex justify-between items-center mb-6\">\r\n                <h1 className=\"text-2xl font-bold\">Gesture Prediction</h1>\r\n                <button \r\n                    onClick={() => onNavigate('home')} \r\n                    className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors\"\r\n                >\r\n                    &larr; Back to Home\r\n                </button>\r\n            </div>\r\n            \r\n            {/* Camera and Prediction Section */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Left Panel: Camera Feed */}\r\n                <div className=\"bg-gray-800 p-4 rounded-2xl shadow-lg\">\r\n                    <div className=\"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4 relative\">\r\n                        <video \r\n                            ref={videoRef} \r\n                            autoPlay \r\n                            playsInline \r\n                            muted\r\n                            className=\"w-full h-full object-cover\"\r\n                        ></video>\r\n                        {/* Overlay canvas untuk bounding boxes */}\r\n                        <canvas \r\n                            ref={overlayCanvasRef}\r\n                            className=\"absolute top-0 left-0 w-full h-full pointer-events-none\"\r\n                            style={{ zIndex: 10 }}\r\n                        ></canvas>\r\n                        <canvas ref={canvasRef} className=\"hidden\"></canvas>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex flex-wrap gap-2 justify-center\">\r\n                        <button \r\n                            onClick={isCameraOn ? stopCamera : startCamera} \r\n                            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors\"\r\n                        >\r\n                            {isCameraOn ? 'Stop Camera' : 'Start Camera'}\r\n                        </button>\r\n                        \r\n                        <button \r\n                            onClick={isPredicting ? stopPrediction : startPrediction} \r\n                            disabled={!isCameraOn}\r\n                            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500\"\r\n                        >\r\n                            {isPredicting ? 'Stop Prediction' : 'Start Prediction'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Right Panel: Prediction Results */}\r\n                <div className=\"bg-gray-800 p-6 rounded-2xl shadow-lg\">\r\n                    <h2 className=\"text-xl font-bold mb-4 text-center\">Prediction Results</h2>\r\n                    \r\n                    <div className=\"status-message bg-gray-700 p-3 rounded-lg mb-4\">\r\n                        <p className=\"text-center\">{statusMessage}</p>\r\n                    </div>\r\n                    \r\n                    {isPredicting && (\r\n                        <div className=\"bg-blue-900 p-2 rounded-lg text-center mb-4\">\r\n                            <p className=\"font-mono\">FPS: {fps}</p>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {predictionResult && (\r\n                        <div className=\"prediction-results space-y-4\">\r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Detected Gesture:</h3>\r\n                                <p className=\"text-xl text-green-400 font-bold text-center\">\r\n                                    {predictionResult.detected_class || 'No gesture detected'}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Confidence:</h3>\r\n                                <p className=\"text-center\">\r\n                                    {predictionResult.confidence \r\n                                        ? `${(predictionResult.confidence * 100).toFixed(2)}%` \r\n                                        : 'N/A'\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            {predictionResult.detections && predictionResult.detections.length > 0 && (\r\n                                <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                    <h3 className=\"font-bold mb-2\">All Detections:</h3>\r\n                                    <div className=\"space-y-2\">\r\n                                        {predictionResult.detections.map((detection, index) => (\r\n                                            <div key={index} className=\"flex justify-between\">\r\n                                                <span>{detection.class}</span>\r\n                                                <span>{(detection.confidence * 100).toFixed(1)}%</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PredictGesture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}