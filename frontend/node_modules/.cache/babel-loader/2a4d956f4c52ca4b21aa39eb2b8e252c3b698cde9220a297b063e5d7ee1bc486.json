{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gemastik\\\\yoloapp\\\\yoloapp\\\\frontend\\\\src\\\\pages\\\\PredictGesture.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictGesture = ({\n  onNavigate\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const [predictionResult, setPredictionResult] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\n  const [fps, setFps] = useState(0);\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          }\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraOn(true);\n        setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      setIsCameraOn(false);\n      setIsPredicting(false);\n      setStatusMessage(\"Click 'Start Camera' to begin.\");\n    }\n  };\n\n  // Function to start prediction\n  const startPrediction = () => {\n    if (!isCameraOn) return;\n    setIsPredicting(true);\n    setStatusMessage(\"Predicting gestures in real-time...\");\n  };\n\n  // Function to stop prediction\n  const stopPrediction = () => {\n    setIsPredicting(false);\n    setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\n  };\n\n  // Function to capture frame and send to backend for prediction\n  const captureAndPredict = async () => {\n    if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    try {\n      const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\n      const formData = new FormData();\n      formData.append('file', blob, 'frame.jpg');\n      const response = await fetch('http://localhost:8001/api/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPredictionResult(data);\n      }\n    } catch (error) {\n      console.error(\"Prediction failed:\", error);\n    }\n  };\n\n  // FPS counter and prediction loop\n  useEffect(() => {\n    let frameCount = 0;\n    let startTime = Date.now();\n    let predictionInterval = null;\n    if (isPredicting) {\n      predictionInterval = setInterval(() => {\n        captureAndPredict();\n        frameCount++;\n\n        // Calculate FPS every second\n        const currentTime = Date.now();\n        const elapsedTime = (currentTime - startTime) / 1000;\n        if (elapsedTime >= 1) {\n          setFps(Math.round(frameCount / elapsedTime));\n          frameCount = 0;\n          startTime = currentTime;\n        }\n      }, 100); // Adjust interval for desired prediction rate\n    }\n    return () => {\n      if (predictionInterval) {\n        clearInterval(predictionInterval);\n      }\n    };\n  }, [isPredicting]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Gesture Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onNavigate('home'),\n        className: \"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors\",\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-4 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isCameraOn ? stopCamera : startCamera,\n            className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors\",\n            children: isCameraOn ? 'Stop Camera' : 'Start Camera'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isPredicting ? stopPrediction : startPrediction,\n            disabled: !isCameraOn,\n            className: \"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500\",\n            children: isPredicting ? 'Stop Prediction' : 'Start Prediction'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 rounded-2xl shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Prediction Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message bg-gray-700 p-3 rounded-lg mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-900 p-2 rounded-lg text-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono\",\n            children: [\"FPS: \", fps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-results space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Detected Gesture:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl text-green-400 font-bold text-center\",\n              children: predictionResult.detected_class || 'No gesture detected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"Confidence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: predictionResult.confidence ? `${(predictionResult.confidence * 100).toFixed(2)}%` : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), predictionResult.detections && predictionResult.detections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 p-3 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold mb-2\",\n              children: \"All Detections:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: predictionResult.detections.map((detection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: detection.class\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [(detection.confidence * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictGesture, \"Wva2ZnFWWIf4JLfRDGNcPVccr0w=\");\n_c = PredictGesture;\nexport default PredictGesture;\nvar _c;\n$RefreshReg$(_c, \"PredictGesture\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PredictGesture","onNavigate","_s","videoRef","canvasRef","isCameraOn","setIsCameraOn","isPredicting","setIsPredicting","predictionResult","setPredictionResult","statusMessage","setStatusMessage","fps","setFps","startCamera","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","current","srcObject","err","console","error","stopCamera","getTracks","forEach","track","stop","startPrediction","stopPrediction","captureAndPredict","canvas","videoWidth","videoHeight","context","getContext","drawImage","blob","Promise","resolve","toBlob","formData","FormData","append","response","fetch","method","body","ok","data","json","frameCount","startTime","Date","now","predictionInterval","setInterval","currentTime","elapsedTime","Math","round","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","disabled","detected_class","confidence","toFixed","detections","length","map","detection","index","class","_c","$RefreshReg$"],"sources":["C:/Gemastik/yoloapp/yoloapp/frontend/src/pages/PredictGesture.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst PredictGesture = ({ onNavigate }) => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isPredicting, setIsPredicting] = useState(false);\r\n    const [predictionResult, setPredictionResult] = useState(null);\r\n    const [statusMessage, setStatusMessage] = useState(\"Click 'Start Camera' to begin.\");\r\n    const [fps, setFps] = useState(0);\r\n\r\n    // Function to start the camera\r\n    const startCamera = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ \r\n                video: { \r\n                    width: { ideal: 640 },\r\n                    height: { ideal: 480 }\r\n                } \r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n                setIsCameraOn(true);\r\n                setStatusMessage(\"Camera ready. Click 'Start Prediction' to begin.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setStatusMessage(\"Camera access denied. Please allow camera permissions.\");\r\n        }\r\n    };\r\n\r\n    // Function to stop the camera\r\n    const stopCamera = () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            setIsCameraOn(false);\r\n            setIsPredicting(false);\r\n            setStatusMessage(\"Click 'Start Camera' to begin.\");\r\n        }\r\n    };\r\n\r\n    // Function to start prediction\r\n    const startPrediction = () => {\r\n        if (!isCameraOn) return;\r\n        setIsPredicting(true);\r\n        setStatusMessage(\"Predicting gestures in real-time...\");\r\n    };\r\n\r\n    // Function to stop prediction\r\n    const stopPrediction = () => {\r\n        setIsPredicting(false);\r\n        setStatusMessage(\"Prediction stopped. Click 'Start Prediction' to resume.\");\r\n    };\r\n\r\n    // Function to capture frame and send to backend for prediction\r\n    const captureAndPredict = async () => {\r\n        if (!videoRef.current || !videoRef.current.srcObject || !isPredicting) return;\r\n        \r\n        const canvas = canvasRef.current;\r\n        const video = videoRef.current;\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        \r\n        try {\r\n            const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', blob, 'frame.jpg');\r\n\r\n            const response = await fetch('http://localhost:8001/api/predict', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPredictionResult(data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Prediction failed:\", error);\r\n        }\r\n    };\r\n\r\n    // FPS counter and prediction loop\r\n    useEffect(() => {\r\n        let frameCount = 0;\r\n        let startTime = Date.now();\r\n        let predictionInterval = null;\r\n\r\n        if (isPredicting) {\r\n            predictionInterval = setInterval(() => {\r\n                captureAndPredict();\r\n                frameCount++;\r\n                \r\n                // Calculate FPS every second\r\n                const currentTime = Date.now();\r\n                const elapsedTime = (currentTime - startTime) / 1000;\r\n                \r\n                if (elapsedTime >= 1) {\r\n                    setFps(Math.round(frameCount / elapsedTime));\r\n                    frameCount = 0;\r\n                    startTime = currentTime;\r\n                }\r\n            }, 100); // Adjust interval for desired prediction rate\r\n        }\r\n\r\n        return () => {\r\n            if (predictionInterval) {\r\n                clearInterval(predictionInterval);\r\n            }\r\n        };\r\n    }, [isPredicting]);\r\n\r\n    // Cleanup on component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (videoRef.current && videoRef.current.srcObject) {\r\n                videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"w-full max-w-4xl mx-auto p-4\">\r\n            {/* Header */}\r\n            <div className=\"w-full flex justify-between items-center mb-6\">\r\n                <h1 className=\"text-2xl font-bold\">Gesture Prediction</h1>\r\n                <button \r\n                    onClick={() => onNavigate('home')} \r\n                    className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors\"\r\n                >\r\n                    &larr; Back to Home\r\n                </button>\r\n            </div>\r\n            \r\n            {/* Camera and Prediction Section */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Left Panel: Camera Feed */}\r\n                <div className=\"bg-gray-800 p-4 rounded-2xl shadow-lg\">\r\n                    <div className=\"w-full aspect-video bg-black rounded-lg overflow-hidden mb-4\">\r\n                        <video \r\n                            ref={videoRef} \r\n                            autoPlay \r\n                            playsInline \r\n                            muted\r\n                            className=\"w-full h-full object-cover\"\r\n                        ></video>\r\n                        <canvas ref={canvasRef} className=\"hidden\"></canvas>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex flex-wrap gap-2 justify-center\">\r\n                        <button \r\n                            onClick={isCameraOn ? stopCamera : startCamera} \r\n                            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold transition-colors\"\r\n                        >\r\n                            {isCameraOn ? 'Stop Camera' : 'Start Camera'}\r\n                        </button>\r\n                        \r\n                        <button \r\n                            onClick={isPredicting ? stopPrediction : startPrediction} \r\n                            disabled={!isCameraOn}\r\n                            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg font-semibold transition-colors disabled:bg-gray-500\"\r\n                        >\r\n                            {isPredicting ? 'Stop Prediction' : 'Start Prediction'}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Right Panel: Prediction Results */}\r\n                <div className=\"bg-gray-800 p-6 rounded-2xl shadow-lg\">\r\n                    <h2 className=\"text-xl font-bold mb-4 text-center\">Prediction Results</h2>\r\n                    \r\n                    <div className=\"status-message bg-gray-700 p-3 rounded-lg mb-4\">\r\n                        <p className=\"text-center\">{statusMessage}</p>\r\n                    </div>\r\n                    \r\n                    {isPredicting && (\r\n                        <div className=\"bg-blue-900 p-2 rounded-lg text-center mb-4\">\r\n                            <p className=\"font-mono\">FPS: {fps}</p>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {predictionResult && (\r\n                        <div className=\"prediction-results space-y-4\">\r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Detected Gesture:</h3>\r\n                                <p className=\"text-xl text-green-400 font-bold text-center\">\r\n                                    {predictionResult.detected_class || 'No gesture detected'}\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                <h3 className=\"font-bold mb-2\">Confidence:</h3>\r\n                                <p className=\"text-center\">\r\n                                    {predictionResult.confidence \r\n                                        ? `${(predictionResult.confidence * 100).toFixed(2)}%` \r\n                                        : 'N/A'\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            \r\n                            {predictionResult.detections && predictionResult.detections.length > 0 && (\r\n                                <div className=\"bg-gray-700 p-3 rounded-lg\">\r\n                                    <h3 className=\"font-bold mb-2\">All Detections:</h3>\r\n                                    <div className=\"space-y-2\">\r\n                                        {predictionResult.detections.map((detection, index) => (\r\n                                            <div key={index} className=\"flex justify-between\">\r\n                                                <span>{detection.class}</span>\r\n                                                <span>{(detection.confidence * 100).toFixed(1)}%</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PredictGesture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}